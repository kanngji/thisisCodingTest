리스트 관련 기타 메서드

append() , 변수명.append() , 리스트에 원소를 하나 삽입할 때 사용한다 O(1)
sort() , 변수명.sort() 기본 정렬 기능으로 오름차순으로 정렬한다
         변수명.sort(reverse = True) 내림차순으로 정렬한다   O(NlogN)
reverse(), 변수명.reverse() 리스트의 원소의 순서를 모두 뒤집어 놓는다 O(N)
insert() , 변수명.insert(삽입할 위치 인덱스, 삽입할 값) 특정한 인덱스 위치에 원소를 삽입할 때 사용한다 O(N)
count(), 변수명.count(특정 값) 리스트에서 특정한 값을 가지는 데이터의 개수를 셀 때 사용한다 O(N)
remove(), 변수명.remove(특정 값) 특정한 값을 갖는 원소를 제거하는데, 값을 가진 원소가 여러 개면 하나만 제거한다 O(N)

a = [1,2,3,4,5,5,5]
remove_set = { 3,5}

result = [i for i in a if i not in remove_set]
print(result)

[1,2,4]

파이썬의 문자열은 내부적으로 리스트와 같이 처리된다

튜플 자료형
파이썬의 튜플 자료형은 리스트와 거의 비슷한다 다음과 같은 차이가 있다.

* 튜플은 한 번 선언된 값을 변경할 수 없다.
* 리스트는 대괄호[] 를 이용하지만 튜플은 소괄호 ()를 이용한다
* 튜플은 리스트에 비해 상대적으로 공간 효율적이고, 일반적으로 각 원소의 성질이 서로 다를 때 주로 사용한다
* 흔히 다익스트라 최단 경로 알고리즘에서는 '비용'과 '노드 번호'라는 서로 다른 성질의 데이터를
(비용, 노드번호)의 형태로 함께 튜플로 묶어서 관리하는 것이 관례이다.

사전 자료형
사전 자료형은 키key와 값value의 쌍을 데이터로 가지는 자료형이다.
* 사전 자료형에 특정한 원소가 있는지 검사할 때는 '원소 in 사전'의 형태를 사용할 수 있다.

사전 자료형 관련 함수
사전 자료형을 잘 이용하기 위해서는 이와 관련한 다양한 함수에 대해서 알아야한다
대표적으로는 키와 값을 별도로 뽑아내기 위한 함수가 있다.
키 데이터만 뽑아서 리스트로 이용할 때는 keys() 함수를 이용하며
값 데이터만 뽑아서 리스트로 이용할 때는 values() 함수를 이용한다

집합 자료형 소개
파이썬에서는 집합 (set)을 처리하기 위한 집합 자료형을 제공하고 있다. 집합은 기본적으로 리스트 
혹은 문자열을 이용해서 만들 수 있는데, 집합은 다음과 같은 특징이 있다.
- 중복을 허용하지 않는다
- 순서가 없다

* '특정한 데이터가 이미 등장한 적이 있는지 여부'를 체크할 때 매우 효과적이다.

# 집합 자료형 초기화 방법1
data = set([1,2,3,4,4,5])

# 집합 자료형 초기화 방법2
data = {1,2,3,4,4,5}

집합 자료형의 연산
집합 자료형 데이터 사이에서 합집합을 계산할 때는 '|'를 이용한다
교집합은 '&' 차집합은 '-'를 이용한다

집합 자료형 관련 함수
하나의 집합 데이터에 값을 추가할 때는 add() 함수를 이용할 수 있다.
update() 함수는 여러 개의 값을 한꺼번에 추가하고자 할때 사용한다.

[조건문]
파이썬에서 조건문을 작성할 때는 if ~ elif ~ else 문을 이용한다

ex)

if 조건문 1:
    조건문 1이 True일 때 실행되는 코드
elif 조건문 2:
    조건문 1에 해당하지 않고, 조건문 2가 True일 때 실행되는 코드
else:
    위의 모든 조건문이 모두 True 값이 아닐 때 실행되는 코드

X in 리스트 : 리스트 안에 X가 들어가 있을때 참이다
X not in 문자열 : 문자열 안에 X가 들어가 있지 않을 때 참이다.

파이썬에서는 조건문의 값이 참이라고 해도, 아무것도 처리하고 싶지 않을 때 pass 문을 이용할수 있음

ex)

score = 85

if score >=80:
    pass
else:
    print('성적이 80점 미만입니다.')


a = [1,2,3,4,5,5,5]
remove_set = {3,5}
result = [i for i in a if i not in remove_set]

print(result)
